# Source instance-specific zshrc
if [ -f ~/.functions.local ]; then
    source ~/.functions.local
fi

# python env
function venv() {
    if [ "$1" != "" ]
    then
        python3 -m venv $1
    else
        python3 -m venv venv
    fi
}

function activate() {
    local envName=""
    if [ "$1" != "" ]
    then
        envName=$1
    elif [[ ${history[@][1]} =~ "^venv$" ]]
    then
        envName=venv
    elif [[ ${history[@][1]} =~ "^venv .*$" ]]
    then
        envName=${${(A)=history[@][1]}[2]}
    else
        >&2 echo "Environment name is required."
        return 1
    fi
    source $envName/bin/activate
}

# Expand an alias
get_alias() {
  echo $aliases[$1]
}

# Convenience methods for creating leetcode solution files
function lc() {
    name=$(echo ${${(s:/:)1}[4]})
    num=$2
    ext=${3:-py}
    echo "$name-$num.$ext" | sed s/-/_/g
}

function lccopy() {
    lc $@ | xclip -selection clipboard
}

function vimlc() {
    url=$(echo $1 | grep -P -o '^(.*?/){5}' | sed 's/.$//')
    fname=$(lc $@)
    if [[ -z "$3" ]]; then
        if [[ -f "$fname" ]]; then
            vim -c ":exe \"autocmd BufWritePre *.py :Black\"" $fname
        else
            vim -c ":exe \"autocmd BufWritePre *.py :Black\" | exe \"normal i# $url\n\n\n\"" $fname
        fi
    elif [[ "$3" == "cpp" ]]; then
        if [[ -f "$fname" ]]; then
            vim $fname
        else
            vim -c ":set formatoptions-=r | exe \"normal i// $url\n\n\n\"" $fname
        fi
    else
        vim $fname
    fi
}
